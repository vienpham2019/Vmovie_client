@tailwind base;
@tailwind components;
@tailwind utilities;

/* List */
ol {
  counter-reset: item;
}

ol > li {
  counter-increment: item;
  margin-left: 20px;
  margin-block: 0.5rem;
}

ol ol > li {
  display: block;
  margin-left: 20px;
}

ol ol > li:before {
  content: counters(item, ".") ". ";
}
/* End List */

/* Button */
.btn-disabled {
  @apply opacity-50 cursor-not-allowed;
}
.btn-blue {
  @apply bg-gradient-to-r from-cyan-500 to-blue-500 text-white rounded h-[3rem] uppercase text-sm;
}

/* End Button */

/* Input */
.input_group {
  @apply relative grid;
}
.input_group > span {
  @apply text-[0.8rem] px-[0.5rem] text-gray-200 absolute -top-3 left-3 bg-[#2b2b31] rounded capitalize;
}
.input {
  @apply rounded px-[1rem] h-[2.5rem] bg-[#2b2b31] outline-none text-white border focus:border-cyan-500;
}

.input:focus + span {
  @apply text-cyan-500;
}

.input.valid,
.input.invalid + span {
  @apply border-green-400;
}

.input.invalid,
.input.invalid + span {
  @apply border-red-400 text-red-400;
}

/* End Input */

/* Animate */
.animate__animated {
  animation-duration: 1s;
  animation-fill-mode: forwards;
}

.animate__fadeInRight {
  animation-name: fadeInRight;
  transform: translateX(100%);
}

@keyframes fadeInRight {
  100% {
    transform: translateX(0%);
  }
}

.animate__fadeInLeft {
  animation-name: fadeInLeft;
  transform: translateX(0%);
}

@keyframes fadeInLeft {
  100% {
    transform: translateX(100%);
  }
}

.animate__fadeIn {
  animation-name: fadeIn;
  opacity: 0;
}

@keyframes fadeIn {
  100% {
    opacity: 1;
  }
}

.animate__fadeOut {
  animation-name: fadeOut;
  opacity: 1;
}

@keyframes fadeOut {
  100% {
    opacity: 0;
  }
}

.ttl_animate {
  animation-fill-mode: forwards;
  animation-name: ttl;
  animation-timing-function: linear;
}

@keyframes ttl {
  100% {
    width: 0%;
  }
}
/* End Animate */
